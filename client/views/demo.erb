<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="utf-8">
        <title>gRaphaël Line Charts</title>
        <style>
          body {
            background: #999 url(http://raphaeljs.com/images/bgbg.png);
            font: 100.01% "Fontin Sans", Fontin-Sans, "Myriad Pro", "Lucida Grande", "Lucida Sans Unicode", Lucida, Verdana, Helvetica, sans-serif;
            color: #000;
            margin: 10px 0 0 0;
            padding: 0;
            text-align: center;
          }
          #holder {
            -moz-border-radius: 10px;
            -webkit-border-radius: 10px;
            -webkit-box-shadow: 0 1px 3px #666;
            background: #ddd url(http://raphaeljs.com/images/bg.png);
            margin: 0 auto;
            width: 640px;
            height: 480px;
          }
          p {
            text-align: left;
            margin: .5em 2em;
          }
        </style>
        <script src="/js/raphael-min.js"></script>
        <script src="/js/g.raphael-min.js"></script>
        <script src="/js/g.line-min.js"></script>
        <script>
            window.onload = function () {
                var r = Raphael("holder"),
                    txtattr = { font: "12px sans-serif" };

                var x = [], y = [], y2 = [], y3 = [];

                for (var i = 0; i < 1e6; i++) {
                    x[i] = i * 10;
                    y[i] = (y[i - 1] || 0) + (Math.random() * 7) - 3;
                    y2[i] = (y2[i - 1] || 150) + (Math.random() * 7) - 3.5;
                    y3[i] = (y3[i - 1] || 300) + (Math.random() * 7) - 4;
                }

                r.text(480, 250, "Symbols, axis and hover effect").attr(txtattr);


                var lines = r.linechart(
                  330, 250, 300, 220,
                  [[1, 2, 3, 4, 5, 6, 7],[3.5, 4.5, 5.5, 6.5, 7, 8]],
                  [[12, 32, 23, 15, 17, 27, 22], [10, 20, 30, 25, 15, 28]],
                  { nostroke: false, axis: "0 0 1 1", symbol: "circle", smooth: true }
                ).hoverColumn(function () {
                    this.tags = r.set();

                    for (var i = 0, ii = this.y.length; i < ii; i++) {
                        this.tags.push(r.tag(this.x, this.y[i], this.values[i], 160, 10).insertBefore(this).attr([{ fill: "#fff" }, { fill: this.symbols[i].attr("fill") }]));
                    }
                }, function () {
                    this.tags && this.tags.remove();
                });

                lines.symbols.attr({ r: 6 });
                // lines.lines[0].animate({"stroke-width": 6}, 1000);
                // lines.symbols[0].attr({stroke: "#fff"});
                // lines.symbols[0][1].animate({fill: "#f00"}, 1000);
            };
        </script>
    </head>
    <body class="raphael" id="g.raphael.dmitry.baranovskiy.com">
        <div id="holder"></div>
        <p>
            Demo of <a href="http://g.raphaeljs.com/">gRaphaël</a> JavaScript library.
        </p>
    </body>
</html>

